/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

module.exports = require('./lib/express');
const express = require('express')
const app = express()
const bodyParser = require('body-parser')

/** get default page */
app.get('/', function (req, res) {
  res.send('Hello World!')
})

/** API for sending data */
app.post('/api/send', function (req, res) {
  //if I had a param:
  //var text = req.body.text;
  res.send('POST request')
})

const event1 = {
  id: 1,
  title: "Event 1",
  description: "Best event in the world ever",
  date: "23/03/2017",
};

const event2 = {
  id: 2,
  title: "Event 2",
  description: "Normal event in the world ever",
  date: "20/03/2017",
};

const event3 = {
  id: 3,
  title: "Event 3",
  description: "Worst event in the world ever",
  date: "15/03/2017",
};

var events = [event1, event2, event3];

const getEvent = (id) => {
  return new Promise(function (resolve, reject) {
    if (id > events.length) {
      reject("no event found");
    }
    resolve(events[id - 1]);
  })
}

// To show list of all events
app.get('/events', function (req, res) {
  res.send(events);
})

// get details of a specific event (based in id)
app.get('/events/:eid', function (req, res) {
  getEvent(req.params.eid).then(event => { res.send(event) })
  .catch(err => console.log("message:", err))
})

app.use(bodyParser.json());

// create new event where req.body is passed from front-end
app.post('/events', function (req, res) {
  res.send(req.body); // your JSON response.send(request.body); // echo the result back });
})

//Edit an event  -  using put?
app.put('/events/:eid', function (req, res) {
  getEvent(req.params.eid).then(event => {
    event = req.body;
    res.send(event) })
  .catch(err => console.log("message:", err))
})

//Delete an event - use delete
app.delete('/events/:eid', function (req, res) {
  getEvent(req.params.eid).then(event => {
    const id = req.params.eid;
    events.splice(id-1,1);
    res.send("event " + id + " deleted");
    })
  .catch(err => console.log("message:", err))
})



app.listen(3000, function () {
  console.log('Example app listening on port 3000!')
})
